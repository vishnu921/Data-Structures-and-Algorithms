/*
The method involves the placing of Amplifiers at regular distances along the line. 
Each amplifier is loaded with a number a(i), which is called its amplification factor. 
The method of amplification is simple: an amplifier which recieves a signal of strength X, and has Y 
loaded in it, results in a signal of strength Y^X [ Y to the power X]. In course of his research, 
the young scientist tries to find out, that given a set of n amplifiers loaded with a(0), a(1), a(2), ...., a(n-1), 
which particular permutation of these amplifiers, when placed at successive nodes, with the initial node given a 
signal of strength 1, produces the strongest output signal.

this is better illustrated by the following example : 5 6 4
4^(5^(6^1)) is the strength of the strongest signal, which is generated by putting amplifier loaded with 6 in 
first place, 5 in second place and 4 in third place.

Given a list of integers specifying the set of amplifiers at hand, you must find out the order in which they must 
be placed, to get the highest signal strength. In case their exist multiple permutations with same output, you 
should print the one which has bigger amplifiers first.
*/
#include <bits/stdc++.h>
using namespace std;

int main(){
	int t;
	cin >> t;
	while(t--){
		int n;
		cin >> n;
		long long a[n];
		int ones = 0;
		for(int i = 0; i < n; i++){
			cin >> a[i];
			if(a[i] == 1) ones++;
		}

		//sort array in ascending order
		sort(a, a+n);
		
		int i = 0;
		//print all 1's first because 1^n = 1 so 1 cannot be after a bigger number
		while(a[i] == 1){
			cout << "1 ";
			i++;
		}

		//check for exception case of 2 and 3 because 3^2 > 2^3
		if(n-i == 2 && a[i] == 2 && a[i+1] == 3) cout << "2 3";
		else{
			for(int j = n-1; j >= i; j--){
				cout << a[j] << " ";
			}
		}
		cout << "\n";
	}
	return 0;
}